export const enLocale  = {
    //forms
    Loading: "Loading...",
    UserName: "UserName",
    Email: "Email",
    EmailNameRequiredMessage: "Please enter valid email!",
    UserNameRequiredMessage: "Please enter your UserName!",
    PasswordRequiredMessage: "Please enter your password!",
    PasswordConfirmationRequiredMessage: "Please confirm your password!",
    LoginError: "Wrong password or email",
    Password: "Password",
    ConfirmPassword: "Confirm Password",
    Submit: "Submit",
    NotSet: "Not Set",
    OK: "Ok",
    NO: "No",
    Edit: "Edit",
    Delete: "Delete",
    Archive: "Archive",
    Action: "Action",
    SignIn: "Sign In",
    Back: "Back",
    Register: "Register",
    LogOut: "LogOut",
    References: "References",
    AdminPanel: "Admin Panel",
    Dashboard: "Dashboard",
    PersonReference: "Person",
    GradeReference: "Grade",
    ProjectReference: "Project",
    MeetingReference: "1-2-1",
    TaskList: "Task List",
    RoleReference: "Role",
    PersonProjectsReference: "Person Projects",
    UserProjectsReference: "User Projects",
    UserReference: "User",
    AccessDeniedTitle: "Access Denied",
    AccessDeniedMessage: "Please log in or make sure you have rights to this section",
    Or: "Or",

    Person: {
        Add: "Add Person",
        Edit: "Edit Person",
        DeleteTitle: "Delete the Person",
        DeleteConfirmation: "Are you sure to delete this Person?",
        ArchiveTitle: "Archive the Person",
        ArchiveConfirmation: "Are you sure to archive this Person?",
        LastName: "LastName",
        FirstName: "FirstName",
        SurName: "SurName",
        ShortName: "ShortName",
        Email: "Email",
        Grade: "Grade",
        SelectGradeQuery: "Select a grade...",
        EmailValidationError: "Please, enter valid email",
        GradeValidationError: "Grade can not be empty",
        NameValidationError: "First/Last/Sur/Short Name can not be empty",
        GreetingMail: "Greeting Mail",
        SendGreetingMail: "Send"
    },
    Grade: {
        Add: "Add Grade",
        Edit: "Edit Grade",
        DeleteTitle: "Delete the Grade",
        DeleteConfirmation: "Are you sure to delete this Grade?",
        GradeName: "Grade Name",
        NameValidationError: "Grade name can not be empty",
    },
    OneTwoOne: {
        Person: "Person",
        Grade: "Grade",
        LastMeeting: "Last 1-2-1 meeting",
        DeadLine: "Deadline",
        DaysForDeadline: "Days for Deadline",
    },
    Project: {
        ProjectName: "Project Name",
        Add: "Add Project",
        Edit: "Edit Project",
        DeleteTitle: "Delete the Project",
        DeleteConfirmation: "Are you sure to delete this Project?",
        NameValidationError: "Project name can not be empty"
    },
    Meeting: {
        Person: "Person",
        PlannedDate: "Planned Date",
        ActualDate: "Actual Date",
        FollowUpWasSended: "Follow-up was sended",
        Goals: {
            Goals: "Goals",
            Goal: "Goal",
            AddGoal: "Add Goal",
            EditGoal: "Edit Goal",
            DeleteTitle: "Delete the Goal",
            DeleteConfirmation: "Are you sure to delete this Goal?",
        },
        Notes: {
            Notes: 'Notes',
            Note: "Note",
            AddNote: "Add Note",
            EditNote: "Edit Note",
            DeleteTitle: "Delete the Note",
            DeleteConfirmation: "Are you sure to delete this Note?",
        },
        ProcessingContent: {
            GenerateFollowUp: "Generate Follow-up",
            SendFollowUp: "Send Follow-Up",
        },
        PartOfFollowUp: "Participates in feedback",
        Add: "Add Meeting",
        Edit: "Edit Meeting",
        Process: "Process",
        Processing: "Processing",
        DeleteTitle: "Delete the Meeting",
        DeleteConfirmation: "Are you sure to delete this Meeting?",
        ClearFiltering: "Clear",
        SelectPerson: "Select a Person...",
        PlanDateValidationError: "The planned date cannot be empty",
        PersonValidationError: "Person can not be empty"
    },
    Task: {
        Description: "Task",
        Complete: "Complete",
        Person: "Person",
        MarkAsCompleted: "Mark as Completed",
        CompleteTask: "Complete Task",
        CompleteTaskConfirmation: "Complete this Task? Are you sure?",
        MeetingDate: "Meeting Date",
    },
    Role: {
        Add: "Add Role",
        Edit: "Edit Role",
        DeleteTitle: "Delete the Role",
        DeleteConfirmation: "Are you sure to delete this Role?",
        RoleName: "Role Name",
        NameValidationError: "Role name can not be empty"
    },
    PersonProject: {
        Person: "Person Name",
        Projects: "Projects",
        Add: "Add Project",
        NameValidationError: "Please, select a project",
        AlreadyUsed: "The Project is already used",
    },
    UserProject: {
        UserName: "User Name",
        Email: "Email",
        Projects: "Projects",
        Add: "Add Project",
        NameValidationError: "Please, select a project",
        AlreadyUsed: "The Project is already used",
    },
    User: {
        UserName: "User Name",
        Email: "Email",
        Role: "Role",
        Edit: "Edit User",
        DeleteTitle: "Delete the User",
        DeleteConfirmation: "Are you sure to delete this User?",
        EmailValidationError: "Please, enter valid email",
        NameValidationError: "UserName can not be empty",
        PasswordConfirmationError: "Wrong new password or it confirmation",
        CurrentPassValidationError: "Current password can not be empty",
        NewPassValidationError: "New password can not be empty",
        ConfirmPassValidationError: "Confirmation password can not be empty",
        ChangePassword: "Set as change Password",
        CurrentPassword: "Current password",
        NewPassword: "New password",
        ConfirmPassword: "Confirm password",
    },

    //Selectors
    GradeSelector: {
        Grade: "Grade",
        SelectGradeQuery: "Select a grade...",
    },
    ProjectSelector: {
        Project: "Project",
        SelectProjectQuery: "Select a Project...",
    },
    RoleSelector: {
        Role: "Role",
        SelectRoleQuery: "Select a Role...",
    },
}